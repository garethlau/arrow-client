{"version":3,"sources":["constants.js","components/Login/Login.jsx","hooks/useFormInput.js","store.js","components/Login/LoginContainer.jsx","components/Signup/Signup.jsx","components/Signup/SignupContainer.jsx","components/Dashboard/Dashboard.jsx","toaster.js","components/Dashboard/DashboardContainer.jsx","components/Create/Create.jsx","hooks/useTagInput.js","components/Create/CreateContainer.jsx","components/Nav/Nav.jsx","components/Nav/NavContainer.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","index.js","utils/index.js"],"names":["module","exports","base","Signup","username","password","submit","useState","showPassword","setShowPassword","lockButton","content","icon","intent","Intent","WARNING","minimal","onClick","style","width","height","position","top","bottom","left","right","margin","helperText","label","labelFor","labelInfo","id","value","onChange","placeholder","type","rightElement","text","fontSize","display","marginLeft","href","useFormInput","initialValue","setValue","hasError","setHasError","setHelperText","clearError","e","target","clear","setError","msg","initialState","user","store","createContext","Provider","StateProvider","children","useReducer","state","action","console","log","actions","SET_USER","payload","CLEAR_USER","Error","dispatch","LoginContainer","useContext","history","useHistory","a","data","axios","post","result","jwtToken","token","localStorage","setItem","push","message","Login","email","SignupContainer","Dashboard","endpoints","selected","select","deleteAlert","cancelDelete","confirmDelete","removeSelected","view","edit","remove","endpointOverlay","handleViewClose","goto","canOutsideClickCancel","canEscapeKeyCancel","cancelButtonText","confirmButtonText","DANGER","isOpen","onCancel","onConfirm","method","uri","padding","length","bordered","interactive","disabled","map","endpoint","key","_id","textAlign","checked","includes","fill","values","whitelist","tags","marginRight","small","rightIcon","outlined","onClose","className","Classes","OVERLAY_SCROLL_CONTAINER","canEscapeKeyClose","canOutsideClickClose","hasBackdrop","usePortal","useTallContent","transform","CARD","overflow","dangerouslySetInnerHTML","__html","displayCode","highlight","languages","js","domain","DIALOG_FOOTER_ACTIONS","AppToaster","Toaster","create","Position","TOP","DashboardContainer","setEndpoints","setSelected","setDeleteAlert","setEndpointOverlay","config","utils","getJWTConfig","toDelete","delete","show","window","location","reload","SUCCESS","useEffect","get","then","res","catch","err","tmp","filter","elem","destination","Create","handleMethodChange","code","onCodeChange","testCode","createEndpoint","authorizedDomains","testResults","showTestResults","editMode","marginBottom","options","border","onValueChange","fontFamily","time","useTagInput","initialValues","setValues","set","add","tag","CreateContainer","setCode","setMethod","setTestResults","setShowTestResults","setEditMode","pathname","split","uriString","splice","seg","event","currentTarget","newCode","substring","body","query","d","Date","toLocaleTimeString","patch","Nav","logout","align","Alignment","LEFT","MINIMAL","RIGHT","NavContainer","constants","Home","gridTemplateColumns","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","getJWT","getItem","headers","Authorization"],"mappings":"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","file":"static/js/main.70ec7720.chunk.js","sourcesContent":["module.exports = {\r\n  base:\r\n    process.env.NODE_ENV === \"production\" ? \"https://arrow.garethdev.space\" : \"\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  Tooltip,\r\n  Intent,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default function Signup({ username, password, submit }) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const lockButton = (\r\n    <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`}>\r\n      <Button\r\n        icon={showPassword ? \"unlock\" : \"lock\"}\r\n        intent={Intent.WARNING}\r\n        minimal={true}\r\n        onClick={() => setShowPassword(!showPassword)}\r\n      />\r\n    </Tooltip>\r\n  );\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: \"300px\",\r\n          height: \"300px\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <FormGroup\r\n          helperText={username.helperText}\r\n          label=\"Username\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"username-text-input\"\r\n            value={username.value}\r\n            onChange={username.onChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup\r\n          helperText={password.helperText}\r\n          label=\"Password\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"password-text-input\"\r\n            placeholder=\"\"\r\n            value={password.value}\r\n            onChange={password.onChange}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            rightElement={lockButton}\r\n          />\r\n        </FormGroup>\r\n        <div>\r\n          <Button onClick={submit} text=\"Log in\" intent=\"primary\" />\r\n          <p\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n          >\r\n            Don't have an account?\r\n          </p>\r\n          <a\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n            href=\"/signup\"\r\n          >\r\n            Sign up\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useFormInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [helperText, setHelperText] = useState(\"\");\r\n\r\n  function setError(msg) {\r\n    setHasError(true);\r\n    setHelperText(msg);\r\n  }\r\n\r\n  function clearError() {\r\n    setHasError(false);\r\n    setHelperText(\"\");\r\n  }\r\n\r\n  function handleChange(e) {\r\n    clearError();\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  function clear() {\r\n    setValue(\"\");\r\n  }\r\n  return {\r\n    value: value,\r\n    onChange: handleChange,\r\n    clear: clear,\r\n    hasError: hasError,\r\n    helperText: helperText,\r\n    setError: setError,\r\n    clearError: clearError,\r\n    setValue: setValue,\r\n  };\r\n};\r\n\r\nexport default useFormInput;\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    console.log(\"ACTION\");\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case actions.SET_USER:\r\n        return { ...state, user: action.payload };\r\n      case actions.CLEAR_USER:\r\n        return { ...state, user: null };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nconst actions = {\r\n  SET_USER: \"SET_USER\",\r\n  CLEAR_USER: \"CLEAR_USER\",\r\n};\r\n\r\nexport { store, StateProvider, actions };\r\n","import React, { useContext } from \"react\";\r\nimport Login from \"./Login\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { base } from \"../../constants\";\r\nimport { store, actions } from \"../../store\";\r\n\r\nexport default function LoginContainer() {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n\r\n  const history = useHistory();\r\n  const username = useFormInput(\"\");\r\n  const password = useFormInput(\"\");\r\n\r\n  async function submit() {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    try {\r\n      let result = await axios.post(base + \"/core/auth/login\", data);\r\n      const jwtToken = result.data.token;\r\n      const user = result.data.user;\r\n      dispatch({ type: actions.SET_USER, payload: user });\r\n      localStorage.setItem(\"ARROW_JWT_TOKEN\", jwtToken);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  return <Login username={username} password={password} submit={submit} />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  Tooltip,\r\n  Intent,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default function Login({ username, email, password, submit }) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const lockButton = (\r\n    <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`}>\r\n      <Button\r\n        icon={showPassword ? \"unlock\" : \"lock\"}\r\n        intent={Intent.WARNING}\r\n        minimal={true}\r\n        onClick={() => setShowPassword(!showPassword)}\r\n      />\r\n    </Tooltip>\r\n  );\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: \"300px\",\r\n          height: \"300px\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <FormGroup\r\n          helperText={username.helperText}\r\n          label=\"Username\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"username-text-input\"\r\n            value={username.value}\r\n            onChange={username.onChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup\r\n          helperText={username.helperText}\r\n          label=\"Email\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"email-text-input\"\r\n            value={email.value}\r\n            onChange={email.onChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup\r\n          helperText={password.helperText}\r\n          label=\"Password\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"password-text-input\"\r\n            placeholder=\"\"\r\n            value={password.value}\r\n            onChange={password.onChange}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            rightElement={lockButton}\r\n          />\r\n        </FormGroup>\r\n        <div>\r\n          <Button onClick={submit} text=\"Sign up\" intent=\"primary\" />\r\n          <p\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n          >\r\n            Already have an account?\r\n          </p>\r\n          <a\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n            href=\"/login\"\r\n          >\r\n            Log in\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Signup from \"./Signup\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { base } from \"../../constants\";\r\nimport { store, actions } from \"../../store\";\r\n\r\nexport default function SignupContainer() {\r\n  const globalStore = useContext(store);\r\n  const { dispatch } = globalStore;\r\n  const history = useHistory();\r\n\r\n  const username = useFormInput();\r\n\r\n  const email = useFormInput();\r\n  const password = useFormInput();\r\n\r\n  async function submit() {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    try {\r\n      let result = await axios.post(base + \"/core/auth/signup\", data);\r\n      const jwtToken = result.data.token;\r\n      const user = result.data.user;\r\n      dispatch({ type: actions.SET_USER, payload: user });\r\n      localStorage.setItem(\"ARROW_JWT_TOKEN\", jwtToken);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Signup\r\n      username={username}\r\n      email={email}\r\n      password={password}\r\n      submit={submit}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"../../styles/prism.css\";\r\nimport {\r\n  HTMLTable,\r\n  Button,\r\n  Checkbox,\r\n  Alert,\r\n  Intent,\r\n  Overlay,\r\n  Classes,\r\n  H3,\r\n  Code,\r\n  TagInput,\r\n  Tag,\r\n  Spinner,\r\n} from \"@blueprintjs/core\";\r\nimport { base } from \"../../constants\";\r\n\r\nexport default function Dashboard({\r\n  endpoints,\r\n  selected,\r\n  select,\r\n  deleteAlert,\r\n  cancelDelete,\r\n  confirmDelete,\r\n  removeSelected,\r\n  view,\r\n  edit,\r\n  remove,\r\n  endpointOverlay,\r\n  handleViewClose,\r\n  goto,\r\n}) {\r\n  function createCode() {\r\n    return {\r\n      __html: endpointOverlay.displayCode\r\n        ? highlight(endpointOverlay.displayCode, languages.js)\r\n        : null,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <Alert\r\n          canOutsideClickCancel\r\n          canEscapeKeyCancel\r\n          cancelButtonText=\"Cancel\"\r\n          confirmButtonText=\"Delete\"\r\n          icon=\"trash\"\r\n          intent={Intent.DANGER}\r\n          isOpen={deleteAlert.isOpen}\r\n          onCancel={cancelDelete}\r\n          onConfirm={confirmDelete}\r\n        >\r\n          <p>\r\n            Are you sure you want to delete{\" \"}\r\n            <b>\r\n              {deleteAlert.method} {deleteAlert.uri}\r\n            </b>\r\n            ? This operation is irreversiable.\r\n          </p>\r\n        </Alert>\r\n      </section>\r\n      <div style={{ padding: \"25px\" }}>\r\n        {endpoints && endpoints.length > 0 && (\r\n          <HTMLTable bordered interactive style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: \"75px\" }}>\r\n                  <Button\r\n                    intent={Intent.DANGER}\r\n                    text=\"Delete\"\r\n                    disabled={selected.length === 0}\r\n                    onClick={removeSelected}\r\n                  />\r\n                </th>\r\n                <th style={{ width: \"100px\" }}>METHOD</th>\r\n                <th>URL</th>\r\n                <th>Whitelist</th>\r\n                <th style={{ width: \"250px\" }}>Tags</th>\r\n                <th style={{ width: \"300px\" }}>{null}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {endpoints.map((endpoint) => (\r\n                <tr key={endpoint._id}>\r\n                  <td style={{ textAlign: \"center\" }}>\r\n                    <Checkbox\r\n                      checked={selected.includes(endpoint._id)}\r\n                      onChange={select(endpoint._id)}\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>\r\n                    <Code>{endpoint.method}</Code>\r\n                  </td>\r\n                  <td>\r\n                    <Code>{base + endpoint.uri}</Code>\r\n                  </td>\r\n                  <td>\r\n                    <TagInput disabled fill values={endpoint.whitelist} />\r\n                  </td>\r\n                  <td>\r\n                    <TagInput disabled fill values={endpoint.tags} />\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      onClick={view(endpoint._id)}\r\n                      style={{ marginRight: \"10px\" }}\r\n                      small\r\n                      rightIcon=\"eye-open\"\r\n                      text=\"View\"\r\n                      intent=\"primary\"\r\n                      outlined\r\n                    />\r\n                    <Button\r\n                      onClick={edit(endpoint._id)}\r\n                      style={{ marginRight: \"10px\" }}\r\n                      small\r\n                      rightIcon=\"edit\"\r\n                      text=\"Edit\"\r\n                      intent=\"warning\"\r\n                      outlined\r\n                    />\r\n\r\n                    <Button\r\n                      onClick={remove(endpoint._id)}\r\n                      small\r\n                      rightIcon=\"trash\"\r\n                      text=\"Delete\"\r\n                      intent=\"danger\"\r\n                      outlined\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </HTMLTable>\r\n        )}\r\n      </div>\r\n\r\n      {endpoints && endpoints.length === 0 && (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <p>No endpoints created.</p>\r\n          <Button\r\n            intent=\"primary\"\r\n            onClick={goto(\"/create\")}\r\n            rightIcon=\"chevron-right\"\r\n            text=\"Create an Endpoint\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <section>\r\n        <Overlay\r\n          onClose={handleViewClose}\r\n          className={Classes.OVERLAY_SCROLL_CONTAINER}\r\n          isOpen={endpointOverlay.isOpen}\r\n          canEscapeKeyClose\r\n          canOutsideClickClose\r\n          hasBackdrop\r\n          usePortal\r\n          useTallContent={false}\r\n        >\r\n          <div\r\n            style={{\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              width: \"600px\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            className={Classes.CARD}\r\n          >\r\n            <H3>\r\n              [{endpointOverlay.method}] {endpointOverlay.uri}\r\n            </H3>\r\n            <div\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                overflow: \"scroll\",\r\n                width: \"500px\",\r\n                height: \"300px\",\r\n              }}\r\n              dangerouslySetInnerHTML={createCode()}\r\n            />\r\n            <div>\r\n              {endpointOverlay.whitelist &&\r\n                endpointOverlay.whitelist.length > 0 &&\r\n                endpointOverlay.whitelist.map((domain) => <div>{domain}</div>)}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button intent={Intent.DANGER} onClick={handleViewClose} style={{ margin: \"\" }}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Overlay>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\n/** Singleton toaster instance. Create separate instances for different options. */\r\nexport const AppToaster = Toaster.create({\r\n  className: \"recipe-toaster\",\r\n  position: Position.TOP,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport { AppToaster } from \"../../toaster\";\r\nimport { base } from \"../../constants\";\r\n\r\nimport utils from \"../../utils\";\r\n\r\nexport default function DashboardContainer() {\r\n  const history = useHistory();\r\n  const [endpoints, setEndpoints] = useState(null);\r\n  const [selected, setSelected] = useState([]);\r\n  const [deleteAlert, setDeleteAlert] = useState({\r\n    isOpen: false,\r\n    uri: \"\",\r\n    method: \"\",\r\n  });\r\n\r\n  const [endpointOverlay, setEndpointOverlay] = useState({\r\n    isOpen: false,\r\n  });\r\n\r\n  const select = (id) => () => {\r\n    if (selected.includes(id)) {\r\n      // Need to remove\r\n      let tmp = selected.filter((elem) => elem !== id);\r\n      setSelected(tmp);\r\n    } else {\r\n      // Add to selected array\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  function handleViewClose() {\r\n    setEndpointOverlay({ isOpen: false });\r\n  }\r\n\r\n  const view = (id) => () => {\r\n    let endpoint = endpoints.filter((elem) => elem._id === id)[0];\r\n    setEndpointOverlay({\r\n      isOpen: true,\r\n      uri: endpoint.uri,\r\n      method: endpoint.method,\r\n      whitelist: endpoint.whitelist,\r\n      displayCode: endpoint.displayCode,\r\n    });\r\n  };\r\n\r\n  const edit = (id) => () => {\r\n    history.push(`/edit/${id}`);\r\n  };\r\n\r\n  const remove = (id) => () => {\r\n    let endpoint = endpoints.filter((elem) => elem._id === id)[0];\r\n    console.log(endpoint);\r\n    setDeleteAlert({\r\n      isOpen: true,\r\n      uri: endpoint.uri,\r\n      method: endpoint.method,\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  async function removeSelected() {\r\n    const config = utils.getJWTConfig();\r\n    let toDelete = selected.map(id => `\"${id}\"`)\r\n    try {\r\n      await axios.delete(`${base}/core/endpoint?toDelete=[${toDelete}]`, config);\r\n      AppToaster.show({\r\n        message: \"Endpoints successfully deleted.\",\r\n        action: {\r\n          onClick: () => window.location.reload(false),\r\n          text: \"Reload\",\r\n        },\r\n        intent: Intent.SUCCESS,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      AppToaster.show({\r\n        message: \"Error deleting endpoints.\",\r\n        intent: Intent.DANGER,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function confirmDelete() {\r\n    const config = utils.getJWTConfig();\r\n    try {\r\n      await axios.delete(`${base}/core/endpoint?toDelete=[\"${deleteAlert.id}\"]`, config);\r\n      setDeleteAlert({ isOpen: false });\r\n      AppToaster.show({\r\n        message: \"Endpoint successfully deleted.\",\r\n        action: {\r\n          onClick: () => window.location.reload(false),\r\n          text: \"Reload\",\r\n        },\r\n        intent: Intent.SUCCESS,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      AppToaster.show({\r\n        message: \"Error deleting endpoint.\",\r\n        intent: Intent.DANGER,\r\n      });\r\n    }\r\n  }\r\n\r\n  function cancelDelete() {\r\n    setDeleteAlert({\r\n      isOpen: false,\r\n      uri: \"\",\r\n      method: \"\",\r\n      id: \"\",\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Check if we have  JWT token\r\n    const config = utils.getJWTConfig();\r\n    axios\r\n      .get(`${base}/core/endpoint`, config)\r\n      .then((res) => {\r\n        console.log(res.data.endpoints);\r\n        setEndpoints(res.data.endpoints);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const goto = (destination) => () => {\r\n    history.push(destination)\r\n  }\r\n\r\n  return (\r\n    <Dashboard\r\n      endpoints={endpoints}\r\n      selected={selected}\r\n      select={select}\r\n      deleteAlert={deleteAlert}\r\n      confirmDelete={confirmDelete}\r\n      cancelDelete={cancelDelete}\r\n      view={view}\r\n      edit={edit}\r\n      remove={remove}\r\n      removeSelected={removeSelected}\r\n      endpointOverlay={endpointOverlay}\r\n      handleViewClose={handleViewClose}\r\n      goto={goto}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"../../styles/prism.css\";\r\n\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  HTMLSelect,\r\n  TextArea,\r\n  Intent,\r\n  Button,\r\n  ControlGroup,\r\n  H3,\r\n  H5,\r\n  Collapse,\r\n  Code,\r\n  TagInput,\r\n} from \"@blueprintjs/core\";\r\nexport default function Create({\r\n  uri,\r\n  handleMethodChange,\r\n  method,\r\n  code,\r\n  onCodeChange,\r\n  testCode,\r\n  createEndpoint,\r\n  authorizedDomains,\r\n  testResults,\r\n  showTestResults,\r\n  editMode,\r\n  tags,\r\n}) {\r\n  return (\r\n    <div style={{ padding: \"30px\" }}>\r\n      <section>\r\n        <H3>{editMode ? \"Edit API Endpoint\" : \"Create API Endpoint\"}</H3>\r\n        <ControlGroup style={{ marginBottom: \"15px\" }}>\r\n          <HTMLSelect\r\n            style={{ width: \"100px\" }}\r\n            id=\"method-selector\"\r\n            value={method}\r\n            options={[\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"]}\r\n            onChange={handleMethodChange}\r\n          />\r\n          <InputGroup\r\n            style={{ width: \"450px\" }}\r\n            id=\"endpoint-uri-text-input\"\r\n            placeholder=\"/animals/dogs/breeds/golden-retriever\"\r\n            value={uri.value}\r\n            onChange={uri.onChange}\r\n          />\r\n        </ControlGroup>\r\n        <div\r\n          style={{\r\n            width: \"550px\",\r\n            marginBottom: \"15px\",\r\n            border: \"1px solid lightgrey\",\r\n          }}\r\n        >\r\n          <Editor\r\n            value={code}\r\n            onValueChange={onCodeChange}\r\n            highlight={(code) => highlight(code, languages.js)}\r\n            padding={10}\r\n            style={{\r\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n              fontSize: 12,\r\n            }}\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div style={{ width: \"300px\" }}>\r\n          <H5>Authorized Domain Origins</H5>\r\n          <p>Only requests made from these domains can access your API.</p>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <TagInput\r\n              onChange={authorizedDomains.onChange}\r\n              placeholder=\"www.website.com\"\r\n              rightElement={\r\n                authorizedDomains.values.length > 0 && (\r\n                  <Button icon=\"cross\" minimal={true} onClick={authorizedDomains.clear} />\r\n                )\r\n              }\r\n              values={authorizedDomains.values}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section style={{ marginBottom: \"15px\", width: \"550px\" }}>\r\n        <H5>Tags</H5>\r\n        <p>Add tags to keep track of your endpoint.</p>\r\n        <TagInput\r\n          onChange={tags.onChange}\r\n          placeholder=\"Tag this endpoint\"\r\n          rightElement={\r\n            tags.values.length > 0 && <Button icon=\"cross\" minimal={true} onClick={tags.clear} />\r\n          }\r\n          values={tags.values}\r\n        />\r\n      </section>\r\n      <section>\r\n        <H5>Test Your Endpoint</H5>\r\n        <div style={{ marginBottom: \"15px\" }}>\r\n          <Button onClick={testCode} rightIcon=\"lab-test\" intent=\"warning\" text=\"Check Validity\" />\r\n        </div>\r\n        <p>Results:</p>\r\n        <div\r\n          style={{\r\n            width: \"550px\",\r\n            marginBottom: \"15px\",\r\n            border: \"1px solid lightgrey\",\r\n          }}\r\n        >\r\n          <Collapse isOpen={showTestResults}>\r\n            <pre>\r\n              {testResults.map((result) => (\r\n                <div>\r\n                  <code>\r\n                    [{result.time}] {result.message}\r\n                  </code>\r\n                </div>\r\n              ))}\r\n            </pre>\r\n          </Collapse>\r\n        </div>\r\n      </section>\r\n      <Button\r\n        onClick={createEndpoint}\r\n        rightIcon=\"cloud-upload\"\r\n        intent=\"primary\"\r\n        text={editMode ? \"Update Endpoint\" : \"Create Endpoint\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function useTagInput(initialValues) {\r\n  const [values, setValues] = useState(initialValues || []);\r\n\r\n  function clear() {\r\n    setValues([]);\r\n  }\r\n\r\n  function add(tag) {\r\n    setValues([...values, tag]);\r\n  }\r\n\r\n  function set(tags) {\r\n    setValues(tags);\r\n  }\r\n  function onChange(tags) {\r\n    setValues(tags);\r\n  }\r\n  return {\r\n    values,\r\n    clear,\r\n    set,\r\n    add,\r\n    onChange,\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Create from \"./Create\";\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport useTagInput from '../../hooks/useTagInput'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppToaster } from \"../../toaster\";\r\n\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport { base } from \"../../constants\";\r\nimport utils from \"../../utils\";\r\n\r\nexport default function CreateContainer() {\r\n  const history = useHistory();\r\n  const uri = useFormInput(\"\");\r\n  const [code, setCode] = useState(`module.exports = (req, res) => {\r\n    /* Your code here */\r\n\r\n    /* Make sure to return a response object */\r\n    return res.status(200).send();\r\n}\r\n`);\r\n  const [method, setMethod] = useState(\"GET\");\r\n  const authorizedDomains = useTagInput();\r\n\r\n  const [testResults, setTestResults] = useState([]);\r\n  const [showTestResults, setShowTestResults] = useState(true);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\nconst tags = useTagInput();\r\n  function handleMethodChange(event) {\r\n    setMethod(event.currentTarget.value);\r\n  }\r\n\r\n  function onCodeChange(newCode) {\r\n    setCode(newCode);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(history.location.pathname.split(\"/\")[1]);\r\n    if (history.location.pathname.split(\"/\")[1] === \"edit\") {\r\n      // Edit mode\r\n      setEditMode(true);\r\n      const id = history.location.pathname.split(\"/\")[2];\r\n      const config = utils.getJWTConfig();\r\n      axios\r\n        .get(base + \"/core/endpoint/\" + id, config)\r\n        .then((res) => {\r\n          // Fill in endpoint data\r\n          const { endpoint } = res.data;\r\n          setMethod(endpoint.method);\r\n          authorizedDomains.set(endpoint.whitelist)\r\n          setCode(endpoint.displayCode);\r\n          tags.set(endpoint.tags)\r\n          let uriSegs = endpoint.uri.split(\"/\").splice(3);\r\n          let uriString = uriSegs.map((seg) => \"/\" + seg)[0];\r\n          uri.setValue(uriString);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  // content: code.replace(/\\n/g, \"\"),\r\n  function testCode() {\r\n    const data = {\r\n      uri: uri.value.substring(1),\r\n      method: method,\r\n      content: code,\r\n      whitelist: authorizedDomains.values,\r\n      body: {},\r\n      query: {},\r\n    };\r\n    const config = utils.getJWTConfig();\r\n    axios\r\n      .post(base + \"/core/endpoint/validate\", data, config)\r\n      .then((res) => {\r\n        let d = new Date();\r\n        setTestResults([\r\n          ...testResults,\r\n          { message: res.data.message, time: d.toLocaleTimeString() },\r\n        ]);\r\n        setShowTestResults(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function createEndpoint() {\r\n    console.log(uri.value);\r\n    const data = {\r\n      uri: uri.value.substring(1),\r\n      method: method,\r\n      content: code,\r\n      whitelist: authorizedDomains.values,\r\n      body: {},\r\n      query: {},\r\n      tags: tags.values,\r\n    };\r\n    const config = utils.getJWTConfig();\r\n    if (editMode) {\r\n      axios\r\n        .patch(`${base}/core/endpoint/${history.location.pathname.split(\"/\")[2]}`, data, config)\r\n        .then((res) => {\r\n          console.log(res);\r\n          AppToaster.show({\r\n            message: \"Endpoint updated. \",\r\n            action: {\r\n              onClick: () => history.push(\"/dashboard\"),\r\n              text: \"Go to Dashboard\",\r\n            },\r\n            intent: Intent.SUCCESS,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(base + \"/core/endpoint\", data, config)\r\n        .then((res) => {\r\n          console.log(res);\r\n          AppToaster.show({\r\n            message: \"Endpoint created. \",\r\n            action: {\r\n              onClick: () => history.push(\"/dashboard\"),\r\n              text: \"Go to Dashboard\",\r\n            },\r\n            intent: Intent.SUCCESS,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Create\r\n      uri={uri}\r\n      handleMethodChange={handleMethodChange}\r\n      method={method}\r\n      code={code}\r\n      onCodeChange={onCodeChange}\r\n      testCode={testCode}\r\n      createEndpoint={createEndpoint}\r\n      authorizedDomains={authorizedDomains}\r\n      testResults={testResults}\r\n      showTestResults={showTestResults}\r\n      editMode={editMode}\r\n      tags={tags}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarDivider,\r\n  NavbarGroup,\r\n  NavbarHeading,\r\n  Button,\r\n  Alignment,\r\n  Classes,\r\n} from \"@blueprintjs/core\";\r\nimport { store } from \"../../store\";\r\n\r\nexport default function Nav({ goto, logout }) {\r\n  const globalStore = useContext(store);\r\n  const { state } = globalStore;\r\n  console.log(state);\r\n  return (\r\n    <Navbar>\r\n      <NavbarGroup align={Alignment.LEFT}>\r\n        <NavbarHeading>Arrow</NavbarHeading>\r\n        <NavbarDivider />\r\n        <Button\r\n          onClick={goto(\"/\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"home\"\r\n          text=\"Home\"\r\n        />\r\n        <Button\r\n          onClick={goto(\"/dashboard\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"control\"\r\n          text=\"Dashboard\"\r\n        />\r\n        <Button\r\n          onClick={goto(\"/create\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"add\"\r\n          text=\"Create\"\r\n        />\r\n      </NavbarGroup>\r\n\r\n      <NavbarGroup align={Alignment.RIGHT}>\r\n        {state.user ? (\r\n          <Button\r\n            onClick={logout}\r\n            className={Classes.MINIMAL}\r\n            icon=\"log-out\"\r\n            text=\"Logout\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            onClick={goto(\"/login\")}\r\n            className={Classes.MINIMAL}\r\n            icon=\"log-in\"\r\n            text=\"Log in\"\r\n          />\r\n        )}\r\n      </NavbarGroup>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Nav from \"./Nav\";\r\nimport { store, actions } from \"../../store\";\r\nimport utils from \"../../utils\";\r\nimport constants from \"../../constants\";\r\n\r\nexport default function NavContainer() {\r\n  const history = useHistory();\r\n  const globalStore = useContext(store);\r\n  const { dispatch } = globalStore;\r\n  \r\n  useEffect(() => {\r\n    // Check if the user is logged in\r\n    const config = utils.getJWTConfig();\r\n    axios\r\n      .get(constants.base + \"/core/auth/\", config)\r\n      .then((res) => {\r\n        dispatch({ type: actions.SET_USER, payload: res.data });\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const goto = (location) => () => {\r\n    history.push(location);\r\n  };\r\n\r\n  const logout = async () => {\r\n    const config = utils.getJWTConfig();\r\n    try {\r\n      await axios.post(constants.base + \"/core/auth/logout\", {}, config);\r\n      dispatch({ type: actions.CLEAR_USER });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return <Nav goto={goto} logout={logout} />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  H5,\r\n  Code,\r\n  HTMLSelect,\r\n  ControlGroup,\r\n  InputGroup,\r\n} from \"@blueprintjs/core\";\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"../../styles/prism.css\";\r\nimport { base } from \"../../constants\";\r\n\r\nexport default function Home() {\r\n  const history = useHistory();\r\n  const [code, setCode] = useState(`module.exports = (req, res) => {\r\n    const mongoose = require('mongoose');\r\n    const breed = req.params.breed;\r\n    mongoose.connect('mongoURI', {\r\n        useNewUrlParser: true,\r\n        useFindAndModify: true,\r\n        useCreateIndex: true,\r\n        keepAlive: 1,\r\n        reconnectTries: 30,\r\n    }).then(() => {\r\n        const Schema = mongoose.Schema;\r\n        const DogSchema = new Schema({ \r\n            breed: String, \r\n            age: String,\r\n            name: String \r\n        });\r\n        const Dog = mongoose.model('Dog', DogSchema);\r\n        Dog.find({ breed: breed }, (err, dogs) => {\r\n            if (err) {\r\n                return res.status(500).send(err);\r\n            } else {\r\n                return res.status(200).send(dogs);\r\n            }\r\n        });\r\n    });\r\n};\r\n`);\r\n\r\n  const [method, setMethod] = useState(\"GET\");\r\n  const uri = useFormInput(\"/animals/dogs/:breed\");\r\n  function handleMethodChange(event) {\r\n    setMethod(event.currentTarget.value);\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"30px\" }}>\r\n      <H5>What is Arrow?</H5>\r\n      <p>\r\n        {\" \"}\r\n        Arrow is a platform for developers to create API endpoints. It uses Express behind the\r\n        scenes.{\" \"}\r\n      </p>\r\n\r\n      <H5>How do I use Arrow?</H5>\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\" }}>\r\n        <div>\r\n          <p>1. Define your endpoint</p>\r\n          <ControlGroup style={{ width: \"min-content\" }}>\r\n            <HTMLSelect\r\n              options={[\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"]}\r\n              style={{ width: \"100px\" }}\r\n              value={method}\r\n              onChange={handleMethodChange}\r\n            />\r\n            <InputGroup style={{ width: \"300px\" }} value={uri.value} onChange={uri.onChange} />\r\n          </ControlGroup>\r\n        </div>\r\n        <div>\r\n          <p>2. Implement your logic</p>\r\n          <div\r\n            style={{\r\n              width: \"450px\",\r\n              marginBottom: \"15px\",\r\n              border: \"1px solid lightgrey\",\r\n            }}\r\n          >\r\n            <Editor\r\n              value={code}\r\n              onValueChange={setCode}\r\n              highlight={(code) => highlight(code, languages.js)}\r\n              padding={10}\r\n              style={{\r\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                fontSize: 12,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>3. Use your API</p>\r\n          Send a<Code style={{ margin: \"5px\" }}>[{method}]</Code>\r\n          request to\r\n          <Code style={{ margin: \"5px\" }}>{base + uri.value}</Code>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          onClick={() => history.push(\"/signup\")}\r\n          text=\"Try it out\"\r\n          intent=\"primary\"\r\n          rightIcon=\"chevron-right\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Dashboard from \"./components/Dashboard\";\nimport Create from \"./components/Create\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\n\nimport { StateProvider } from \"./store.js\";\n\nfunction App() {\n  return (\n    <StateProvider>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/create\" component={Create} />\n          <Route path=\"/edit\" component={Create} />\n        </Switch>\n      </Router>\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n  getJWT: () => {\r\n    const jwtToken = localStorage.getItem(\"ARROW_JWT_TOKEN\");\r\n    return jwtToken;\r\n  },\r\n  getJWTConfig: () => {\r\n    const jwtToken = localStorage.getItem(\"ARROW_JWT_TOKEN\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + jwtToken,\r\n      },\r\n    };\r\n    return config;\r\n  },\r\n};\r\n"],"sourceRoot":""}