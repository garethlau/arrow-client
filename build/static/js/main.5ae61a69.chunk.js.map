{"version":3,"sources":["constants.js","components/Login/Login.jsx","hooks/useFormInput.js","store.js","components/Login/LoginContainer.jsx","components/Signup/Signup.jsx","components/Signup/SignupContainer.jsx","components/Dashboard/Dashboard.jsx","toaster.js","components/Dashboard/DashboardContainer.jsx","components/Create/Create.jsx","components/Create/CreateContainer.jsx","components/Nav/Nav.jsx","components/Nav/NavContainer.jsx","App.js","serviceWorker.js","index.js","utils/index.js"],"names":["module","exports","base","Signup","username","password","submit","useState","showPassword","setShowPassword","lockButton","content","icon","intent","Intent","WARNING","minimal","onClick","style","width","height","position","top","bottom","left","right","margin","helperText","label","labelFor","labelInfo","id","value","onChange","placeholder","type","rightElement","text","fontSize","display","marginLeft","href","useFormInput","initialValue","setValue","hasError","setHasError","setHelperText","clearError","e","target","clear","setError","msg","initialState","user","store","createContext","Provider","StateProvider","children","useReducer","state","action","console","log","actions","SET_USER","payload","CLEAR_USER","Error","dispatch","LoginContainer","useContext","history","useHistory","a","data","axios","post","result","jwtToken","token","localStorage","setItem","push","message","Login","email","SignupContainer","Dashboard","endpoints","selected","select","deleteAlert","cancelDelete","confirmDelete","view","edit","remove","endpointOverlay","handleViewClose","canOutsideClickCancel","canEscapeKeyCancel","cancelButtonText","confirmButtonText","DANGER","isOpen","onCancel","onConfirm","method","uri","padding","bordered","interactive","map","endpoint","key","_id","textAlign","checked","includes","whitelist","toString","marginRight","small","rightIcon","outlined","onClose","className","Classes","OVERLAY_SCROLL_CONTAINER","canEscapeKeyClose","canOutsideClickClose","hasBackdrop","usePortal","useTallContent","transform","CARD","overflow","dangerouslySetInnerHTML","__html","displayCode","highlight","languages","js","length","domain","DIALOG_FOOTER_ACTIONS","AppToaster","Toaster","create","Position","TOP","DashboardContainer","setEndpoints","setSelected","setDeleteAlert","setEndpointOverlay","useEffect","config","utils","getJWTConfig","get","then","res","catch","err","tmp","filter","elem","delete","show","window","location","reload","SUCCESS","Create","handleMethodChange","code","onCodeChange","testCode","createEndpoint","authorizedDomains","addDomain","removeDomain","testResults","showTestResults","editMode","marginBottom","options","border","onValueChange","fontFamily","hostname","time","CreateContainer","setCode","setMethod","setAuthorizedDomains","setTestResults","setShowTestResults","setEditMode","pathname","split","uriString","splice","seg","event","currentTarget","newCode","substring","body","query","d","Date","toLocaleTimeString","patch","Nav","goto","logout","align","Alignment","LEFT","MINIMAL","RIGHT","NavContainer","constants","Home","App","exact","path","component","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","getJWT","getItem","headers","Authorization"],"mappings":"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","file":"static/js/main.5ae61a69.chunk.js","sourcesContent":["module.exports = {\r\n  base:\r\n    process.env.NODE_ENV === \"production\" ? \"https://arrow.garethdev.space\" : \"\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  Tooltip,\r\n  Intent,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default function Signup({ username, password, submit }) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const lockButton = (\r\n    <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`}>\r\n      <Button\r\n        icon={showPassword ? \"unlock\" : \"lock\"}\r\n        intent={Intent.WARNING}\r\n        minimal={true}\r\n        onClick={() => setShowPassword(!showPassword)}\r\n      />\r\n    </Tooltip>\r\n  );\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: \"300px\",\r\n          height: \"300px\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <FormGroup\r\n          helperText={username.helperText}\r\n          label=\"Username\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"username-text-input\"\r\n            value={username.value}\r\n            onChange={username.onChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup\r\n          helperText={password.helperText}\r\n          label=\"Password\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"password-text-input\"\r\n            placeholder=\"\"\r\n            value={password.value}\r\n            onChange={password.onChange}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            rightElement={lockButton}\r\n          />\r\n        </FormGroup>\r\n        <div>\r\n          <Button onClick={submit} text=\"Log in\" intent=\"primary\" />\r\n          <p\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n          >\r\n            Don't have an account?\r\n          </p>\r\n          <a\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n            href=\"/signup\"\r\n          >\r\n            Sign up\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useFormInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [helperText, setHelperText] = useState(\"\");\r\n\r\n  function setError(msg) {\r\n    setHasError(true);\r\n    setHelperText(msg);\r\n  }\r\n\r\n  function clearError() {\r\n    setHasError(false);\r\n    setHelperText(\"\");\r\n  }\r\n\r\n  function handleChange(e) {\r\n    clearError();\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  function clear() {\r\n    setValue(\"\");\r\n  }\r\n  return {\r\n    value: value,\r\n    onChange: handleChange,\r\n    clear: clear,\r\n    hasError: hasError,\r\n    helperText: helperText,\r\n    setError: setError,\r\n    clearError: clearError,\r\n    setValue: setValue,\r\n  };\r\n};\r\n\r\nexport default useFormInput;\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    console.log(\"ACTION\");\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case actions.SET_USER:\r\n        return { ...state, user: action.payload };\r\n      case actions.CLEAR_USER:\r\n        return { ...state, user: null };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nconst actions = {\r\n  SET_USER: \"SET_USER\",\r\n  CLEAR_USER: \"CLEAR_USER\",\r\n};\r\n\r\nexport { store, StateProvider, actions };\r\n","import React, { useContext } from \"react\";\r\nimport Login from \"./Login\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { base } from \"../../constants\";\r\nimport { store, actions } from \"../../store\";\r\n\r\nexport default function LoginContainer() {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n\r\n  const history = useHistory();\r\n  const username = useFormInput(\"\");\r\n  const password = useFormInput(\"\");\r\n\r\n  async function submit() {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    try {\r\n      let result = await axios.post(base + \"/core/auth/login\", data);\r\n      const jwtToken = result.data.token;\r\n      const user = result.data.user;\r\n      dispatch({ type: actions.SET_USER, payload: user });\r\n      localStorage.setItem(\"ARROW_JWT_TOKEN\", jwtToken);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  return <Login username={username} password={password} submit={submit} />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  Tooltip,\r\n  Intent,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default function Login({ username, email, password, submit }) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const lockButton = (\r\n    <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`}>\r\n      <Button\r\n        icon={showPassword ? \"unlock\" : \"lock\"}\r\n        intent={Intent.WARNING}\r\n        minimal={true}\r\n        onClick={() => setShowPassword(!showPassword)}\r\n      />\r\n    </Tooltip>\r\n  );\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          width: \"300px\",\r\n          height: \"300px\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <FormGroup\r\n          helperText={username.helperText}\r\n          label=\"Username\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"username-text-input\"\r\n            value={username.value}\r\n            onChange={username.onChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup\r\n          helperText={username.helperText}\r\n          label=\"Email\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"email-text-input\"\r\n            value={email.value}\r\n            onChange={email.onChange}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup\r\n          helperText={password.helperText}\r\n          label=\"Password\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            id=\"password-text-input\"\r\n            placeholder=\"\"\r\n            value={password.value}\r\n            onChange={password.onChange}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            rightElement={lockButton}\r\n          />\r\n        </FormGroup>\r\n        <div>\r\n          <Button onClick={submit} text=\"Sign up\" intent=\"primary\" />\r\n          <p\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n          >\r\n            Already have an account?\r\n          </p>\r\n          <a\r\n            style={{ fontSize: \"0.85em\", display: \"inline\", marginLeft: \"5px\" }}\r\n            href=\"/login\"\r\n          >\r\n            Log in\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Signup from \"./Signup\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { base } from \"../../constants\";\r\nimport { store, actions } from \"../../store\";\r\n\r\nexport default function SignupContainer() {\r\n  const globalStore = useContext(store);\r\n  const { dispatch } = globalStore;\r\n  const history = useHistory();\r\n\r\n  const username = useFormInput();\r\n\r\n  const email = useFormInput();\r\n  const password = useFormInput();\r\n\r\n  async function submit() {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    try {\r\n      let result = await axios.post(base + \"/core/auth/signup\", data);\r\n      const jwtToken = result.data.token;\r\n      const user = result.data.user;\r\n      dispatch({ type: actions.SET_USER, payload: user });\r\n      localStorage.setItem(\"ARROW_JWT_TOKEN\", jwtToken);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Signup\r\n      username={username}\r\n      email={email}\r\n      password={password}\r\n      submit={submit}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"../../styles/prism.css\";\r\nimport {\r\n  HTMLTable,\r\n  Button,\r\n  Checkbox,\r\n  Alert,\r\n  Intent,\r\n  Overlay,\r\n  Classes,\r\n  H3,\r\n  Code,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default function Dashboard({\r\n  endpoints,\r\n  selected,\r\n  select,\r\n  deleteAlert,\r\n  cancelDelete,\r\n  confirmDelete,\r\n  view,\r\n  edit,\r\n  remove,\r\n  endpointOverlay,\r\n  handleViewClose,\r\n}) {\r\n  function createCode() {\r\n    return {\r\n      __html: endpointOverlay.displayCode\r\n        ? highlight(endpointOverlay.displayCode, languages.js)\r\n        : null,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <Alert\r\n          canOutsideClickCancel\r\n          canEscapeKeyCancel\r\n          cancelButtonText=\"Cancel\"\r\n          confirmButtonText=\"Delete\"\r\n          icon=\"trash\"\r\n          intent={Intent.DANGER}\r\n          isOpen={deleteAlert.isOpen}\r\n          onCancel={cancelDelete}\r\n          onConfirm={confirmDelete}\r\n        >\r\n          <p>\r\n            Are you sure you want to delete{\" \"}\r\n            <b>\r\n              {deleteAlert.method} {deleteAlert.uri}\r\n            </b>\r\n            ? This operation is irreversiable.\r\n          </p>\r\n        </Alert>\r\n      </section>\r\n      <div style={{ padding: \"25px\" }}>\r\n        <HTMLTable bordered interactive style={{ width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"75px\" }}>{null}</th>\r\n              <th style={{ width: \"100px\" }}>METHOD</th>\r\n              <th>URL</th>\r\n              <th>Whitelist</th>\r\n              <th style={{ width: \"300px\" }}>{null}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {endpoints && endpoints.map((endpoint) => (\r\n              <tr key={endpoint._id}>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <Checkbox\r\n                    checked={selected.includes(endpoint._id)}\r\n                    onChange={select(endpoint._id)}\r\n                  />\r\n                </td>\r\n                <td>{endpoint.method}</td>\r\n                <td>{endpoint.uri}</td>\r\n                <td>{endpoint.whitelist.toString()}</td>\r\n                <td>\r\n                  <Button\r\n                    onClick={view(endpoint._id)}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    small\r\n                    rightIcon=\"eye-open\"\r\n                    text=\"View\"\r\n                    intent=\"primary\"\r\n                    outlined\r\n                  />\r\n                  <Button\r\n                    onClick={edit(endpoint._id)}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    small\r\n                    rightIcon=\"edit\"\r\n                    text=\"Edit\"\r\n                    intent=\"warning\"\r\n                    outlined\r\n                  />\r\n\r\n                  <Button\r\n                    onClick={remove(endpoint._id)}\r\n                    small\r\n                    rightIcon=\"trash\"\r\n                    text=\"Delete\"\r\n                    intent=\"danger\"\r\n                    outlined\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </HTMLTable>\r\n      </div>\r\n\r\n      <section>\r\n        <Overlay\r\n          onClose={handleViewClose}\r\n          className={Classes.OVERLAY_SCROLL_CONTAINER}\r\n          isOpen={endpointOverlay.isOpen}\r\n          canEscapeKeyClose\r\n          canOutsideClickClose\r\n          hasBackdrop\r\n          usePortal\r\n          useTallContent={false}\r\n        >\r\n          <div\r\n            style={{\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              width: \"600px\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            className={Classes.CARD}\r\n          >\r\n            <H3>\r\n              [{endpointOverlay.method}] {endpointOverlay.uri}\r\n            </H3>\r\n            <div\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                overflow: \"scroll\",\r\n                width: \"500px\",\r\n                height: \"300px\",\r\n              }}\r\n              dangerouslySetInnerHTML={createCode()}\r\n            />\r\n            <div>\r\n              {endpointOverlay.whitelist && endpointOverlay.whitelist.length > 0 &&\r\n                endpointOverlay.whitelist.map((domain) => <div>{domain}</div>)}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.DANGER}\r\n                onClick={handleViewClose}\r\n                style={{ margin: \"\" }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Overlay>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\n/** Singleton toaster instance. Create separate instances for different options. */\r\nexport const AppToaster = Toaster.create({\r\n  className: \"recipe-toaster\",\r\n  position: Position.TOP,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport { AppToaster } from \"../../toaster\";\r\nimport { base } from \"../../constants\";\r\n\r\nimport utils from \"../../utils\";\r\n\r\nexport default function DashboardContainer() {\r\n  const history = useHistory();\r\n  const [endpoints, setEndpoints] = useState([]);\r\n  const [selected, setSelected] = useState([\"\"]);\r\n  const [deleteAlert, setDeleteAlert] = useState({\r\n    isOpen: false,\r\n    uri: \"\",\r\n    method: \"\",\r\n  });\r\n\r\n  const [endpointOverlay, setEndpointOverlay] = useState({\r\n    isOpen: false,\r\n  });\r\n\r\n  const select = (id) => () => {\r\n    if (selected.includes(id)) {\r\n      // Need to remove\r\n      let tmp = selected.filter((elem) => elem !== id);\r\n      setSelected(tmp);\r\n    } else {\r\n      // Add to selected array\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  function handleViewClose() {\r\n    setEndpointOverlay({ isOpen: false });\r\n  }\r\n\r\n  const view = (id) => () => {\r\n    let endpoint = endpoints.filter((elem) => elem._id === id)[0];\r\n\r\n    console.log(endpoint);\r\n    setEndpointOverlay({\r\n      isOpen: true,\r\n      uri: endpoint.uri,\r\n      method: endpoint.method,\r\n      whitelist: endpoint.whitelist,\r\n      displayCode: endpoint.displayCode,\r\n    });\r\n  };\r\n\r\n  const edit = (id) => () => {\r\n    history.push(`/edit/${id}`);\r\n  };\r\n\r\n  const remove = (id) => () => {\r\n    let endpoint = endpoints.filter((elem) => elem._id === id)[0];\r\n    console.log(endpoint);\r\n    setDeleteAlert({\r\n      isOpen: true,\r\n      uri: endpoint.uri,\r\n      method: endpoint.method,\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  function confirmDelete() {\r\n    const config = utils.getJWTConfig();\r\n    axios\r\n      .delete(`${base}/core/endpoint?toDelete=[\"${deleteAlert.id}\"]`, config)\r\n      .then((res) => {\r\n        setDeleteAlert({ isOpen: false });\r\n\r\n        AppToaster.show({\r\n          message: \"Endpoint successfully deleted.\",\r\n          action: {\r\n            onClick: () => window.location.reload(false),\r\n            text: \"Refresh\",\r\n          },\r\n          intent: Intent.SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function cancelDelete() {\r\n    setDeleteAlert({\r\n      isOpen: false,\r\n      uri: \"\",\r\n      method: \"\",\r\n      id: \"\",\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Check if we have  JWT token\r\n    const config = utils.getJWTConfig();\r\n    axios\r\n      .get(`${base}/core/endpoint`, config)\r\n      .then((res) => {\r\n        console.log(res.data.endpoints);\r\n        setEndpoints(res.data.endpoints);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Dashboard\r\n      endpoints={endpoints}\r\n      selected={selected}\r\n      select={select}\r\n      deleteAlert={deleteAlert}\r\n      confirmDelete={confirmDelete}\r\n      cancelDelete={cancelDelete}\r\n      view={view}\r\n      edit={edit}\r\n      remove={remove}\r\n      endpointOverlay={endpointOverlay}\r\n      handleViewClose={handleViewClose}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"../../styles/prism.css\";\r\n\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  HTMLSelect,\r\n  TextArea,\r\n  Intent,\r\n  Button,\r\n  ControlGroup,\r\n  H3,\r\n  H5,\r\n  Collapse,\r\n  Code,\r\n} from \"@blueprintjs/core\";\r\nexport default function Create({\r\n  uri,\r\n  handleMethodChange,\r\n  method,\r\n  code,\r\n  onCodeChange,\r\n  testCode,\r\n  createEndpoint,\r\n  whitelist,\r\n  authorizedDomains,\r\n  addDomain,\r\n  removeDomain,\r\n  testResults,\r\n  showTestResults,\r\n  editMode,\r\n}) {\r\n  return (\r\n    <div style={{ padding: \"30px\" }}>\r\n      <section>\r\n        <H3>{editMode ? \"Edit API Endpoint\" : \"Create API Endpoint\"}</H3>\r\n        <ControlGroup style={{ marginBottom: \"15px\" }}>\r\n          <HTMLSelect\r\n            style={{ width: \"100px\" }}\r\n            id=\"method-selector\"\r\n            value={method}\r\n            options={[\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"]}\r\n            onChange={handleMethodChange}\r\n          />\r\n          <InputGroup\r\n            style={{ width: \"450px\" }}\r\n            id=\"endpoint-uri-text-input\"\r\n            placeholder=\"/animals/dogs/breeds/golden-retriever\"\r\n            value={uri.value}\r\n            onChange={uri.onChange}\r\n          />\r\n        </ControlGroup>\r\n        <div\r\n          style={{\r\n            width: \"550px\",\r\n            marginBottom: \"15px\",\r\n            border: \"1px solid lightgrey\",\r\n          }}\r\n        >\r\n          <Editor\r\n            value={code}\r\n            onValueChange={onCodeChange}\r\n            highlight={(code) => highlight(code, languages.js)}\r\n            padding={10}\r\n            style={{\r\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n              fontSize: 12,\r\n            }}\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div style={{ width: \"300px\" }}>\r\n          <H5>Authorized Domain Origins</H5>\r\n          <p>Only requests made from these domains can access your API.</p>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            {authorizedDomains.length > 0 &&\r\n              authorizedDomains.map((hostname) => (\r\n                <div>\r\n                  <Button\r\n                    icon=\"remove\"\r\n                    minimal\r\n                    onClick={removeDomain(hostname)}\r\n                    intent=\"danger\"\r\n                    small\r\n                  />\r\n                  {hostname}\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <FormGroup helperText={whitelist.helperText}>\r\n              <InputGroup\r\n                placeholder=\"realurl.com\"\r\n                onChange={whitelist.onChange}\r\n                value={whitelist.value}\r\n              />\r\n            </FormGroup>\r\n            <Button\r\n              onClick={addDomain}\r\n              rightIcon=\"add\"\r\n              intent=\"primary\"\r\n              text=\"Add Domain\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <H5>Test Your Endpoint</H5>\r\n        <div style={{ marginBottom: \"15px\" }}>\r\n          <Button\r\n            onClick={testCode}\r\n            rightIcon=\"lab-test\"\r\n            intent=\"warning\"\r\n            text=\"Check Validity\"\r\n          />\r\n        </div>\r\n        <p>Results:</p>\r\n        <div\r\n          style={{\r\n            width: \"550px\",\r\n            marginBottom: \"15px\",\r\n            border: \"1px solid lightgrey\",\r\n          }}\r\n        >\r\n          <Collapse isOpen={showTestResults}>\r\n            <pre>\r\n              {testResults.map((result) => (\r\n                <div>\r\n                  <code>\r\n                    [{result.time}] {result.message}\r\n                  </code>\r\n                </div>\r\n              ))}\r\n            </pre>\r\n          </Collapse>\r\n        </div>\r\n      </section>\r\n      <Button\r\n        onClick={createEndpoint}\r\n        rightIcon=\"cloud-upload\"\r\n        intent=\"primary\"\r\n        text={editMode ? \"Update Endpoint\" : \"Create Endpoint\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Create from \"./Create\";\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppToaster } from \"../../toaster\";\r\n\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport { base } from \"../../constants\";\r\nimport utils from \"../../utils\";\r\n\r\nexport default function CreateContainer() {\r\n  const history = useHistory();\r\n  const uri = useFormInput(\"\");\r\n  const [code, setCode] = useState(`module.exports = (req, res) => {\r\n    /* Your code here */\r\n\r\n    /* Make sure to return a response object */\r\n    return res.status(200).send();\r\n}\r\n`);\r\n  const [method, setMethod] = useState(\"GET\");\r\n  const whitelist = useFormInput(\"\");\r\n  const [authorizedDomains, setAuthorizedDomains] = useState([]);\r\n\r\n  const [testResults, setTestResults] = useState([]);\r\n  const [showTestResults, setShowTestResults] = useState(true);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  function handleMethodChange(event) {\r\n    setMethod(event.currentTarget.value);\r\n  }\r\n\r\n  function onCodeChange(newCode) {\r\n    setCode(newCode);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(history.location.pathname.split(\"/\")[1]);\r\n    if (history.location.pathname.split(\"/\")[1] === \"edit\") {\r\n      // Edit mode\r\n      setEditMode(true);\r\n      const id = history.location.pathname.split(\"/\")[2];\r\n      const config = utils.getJWTConfig();\r\n      axios\r\n        .get(base + \"/core/endpoint/\" + id, config)\r\n        .then((res) => {\r\n          console.log(res);\r\n          const { endpoint } = res.data;\r\n          setMethod(endpoint.method);\r\n          setAuthorizedDomains(endpoint.whitelist);\r\n          setCode(endpoint.displayCode);\r\n          let uriSegs = endpoint.uri.split(\"/\").splice(3);\r\n          let uriString = uriSegs.map((seg) => \"/\" + seg);\r\n          uri.setValue(uriString);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  // content: code.replace(/\\n/g, \"\"),\r\n  function testCode() {\r\n    const data = {\r\n      uri: uri.value.substring(1),\r\n      method: method,\r\n      content: code,\r\n      whitelist: authorizedDomains,\r\n      body: {},\r\n      query: {},\r\n    };\r\n    const config = utils.getJWTConfig();\r\n    axios\r\n      .post(base + \"/core/endpoint/validate\", data, config)\r\n      .then((res) => {\r\n        let d = new Date();\r\n        setTestResults([\r\n          ...testResults,\r\n          { message: res.data.message, time: d.toLocaleTimeString() },\r\n        ]);\r\n        setShowTestResults(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function createEndpoint() {\r\n    const data = {\r\n      uri: uri.value.substring(1),\r\n      method: method,\r\n      content: code,\r\n      whitelist: authorizedDomains,\r\n      body: {},\r\n      query: {},\r\n    };\r\n    const config = utils.getJWTConfig();\r\n    if (editMode) {\r\n      axios\r\n        .patch(`${base}/core/endpoint/${history.location.pathname.split(\"/\")[2]}`, data, config)\r\n        .then((res) => {\r\n          console.log(res);\r\n          AppToaster.show({\r\n            message: \"Endpoint updated. \",\r\n            action: {\r\n              onClick: () => history.push(\"/dashboard\"),\r\n              text: \"Go to Dashboard\",\r\n            },\r\n            intent: Intent.SUCCESS,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(base + \"/core/endpoint\", data, config)\r\n        .then((res) => {\r\n          console.log(res);\r\n          AppToaster.show({\r\n            message: \"Endpoint created. \",\r\n            action: {\r\n              onClick: () => history.push(\"/dashboard\"),\r\n              text: \"Go to Dashboard\",\r\n            },\r\n            intent: Intent.SUCCESS,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  function addDomain() {\r\n    if (authorizedDomains.includes(whitelist.value)) {\r\n      whitelist.setError(\"Domain already whitelisted.\");\r\n      return;\r\n    }\r\n    setAuthorizedDomains([...authorizedDomains, whitelist.value]);\r\n    whitelist.clear();\r\n  }\r\n\r\n  const removeDomain = (hostname) => () => {\r\n    setAuthorizedDomains(\r\n      authorizedDomains.filter((domain) => domain !== hostname)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Create\r\n      uri={uri}\r\n      handleMethodChange={handleMethodChange}\r\n      method={method}\r\n      code={code}\r\n      onCodeChange={onCodeChange}\r\n      testCode={testCode}\r\n      createEndpoint={createEndpoint}\r\n      whitelist={whitelist}\r\n      authorizedDomains={authorizedDomains}\r\n      addDomain={addDomain}\r\n      removeDomain={removeDomain}\r\n      testResults={testResults}\r\n      showTestResults={showTestResults}\r\n      editMode={editMode}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarDivider,\r\n  NavbarGroup,\r\n  NavbarHeading,\r\n  Button,\r\n  Alignment,\r\n  Classes,\r\n} from \"@blueprintjs/core\";\r\nimport { store } from \"../../store\";\r\n\r\nexport default function Nav({ goto, logout }) {\r\n  const globalStore = useContext(store);\r\n  const { state } = globalStore;\r\n  console.log(state);\r\n  return (\r\n    <Navbar>\r\n      <NavbarGroup align={Alignment.LEFT}>\r\n        <NavbarHeading>Arrow</NavbarHeading>\r\n        <NavbarDivider />\r\n        <Button\r\n          onClick={goto(\"/\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"home\"\r\n          text=\"Home\"\r\n        />\r\n        <Button\r\n          onClick={goto(\"/dashboard\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"control\"\r\n          text=\"Dashboard\"\r\n        />\r\n        <Button\r\n          onClick={goto(\"/create\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"add\"\r\n          text=\"Create\"\r\n        />\r\n      </NavbarGroup>\r\n\r\n      <NavbarGroup align={Alignment.RIGHT}>\r\n        {state.user ? (\r\n          <Button\r\n            onClick={logout}\r\n            className={Classes.MINIMAL}\r\n            icon=\"log-out\"\r\n            text=\"Logout\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            onClick={goto(\"/login\")}\r\n            className={Classes.MINIMAL}\r\n            icon=\"log-in\"\r\n            text=\"Log in\"\r\n          />\r\n        )}\r\n      </NavbarGroup>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Nav from \"./Nav\";\r\nimport { store, actions } from \"../../store\";\r\nimport utils from \"../../utils\";\r\nimport constants from \"../../constants\";\r\n\r\nexport default function NavContainer() {\r\n  const history = useHistory();\r\n  const globalStore = useContext(store);\r\n  const { dispatch } = globalStore;\r\n  \r\n  useEffect(() => {\r\n    // Check if the user is logged in\r\n    const config = utils.getJWTConfig();\r\n    axios\r\n      .get(constants.base + \"/core/auth/\", config)\r\n      .then((res) => {\r\n        dispatch({ type: actions.SET_USER, payload: res.data });\r\n      })\r\n      .then((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const goto = (location) => () => {\r\n    history.push(location);\r\n  };\r\n\r\n  const logout = async () => {\r\n    const config = utils.getJWTConfig();\r\n    try {\r\n      await axios.post(constants.base + \"/core/auth/logout\", {}, config);\r\n      dispatch({ type: actions.CLEAR_USER });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return <Nav goto={goto} logout={logout} />;\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport { Button } from \"@blueprintjs/core\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Dashboard from \"./components/Dashboard\";\nimport Create from \"./components/Create\";\nimport Nav from \"./components/Nav\";\n\nimport { StateProvider } from \"./store.js\";\nfunction Home() {\n  return (\n    <div>\n      <h1>Welcome to Arrow</h1>\n      <Button intent=\"primary\" text=\"Nice\" />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <StateProvider>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/create\" component={Create} />\n          <Route path=\"/edit\" component={Create} />\n        </Switch>\n      </Router>\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n  getJWT: () => {\r\n    const jwtToken = localStorage.getItem(\"ARROW_JWT_TOKEN\");\r\n    return jwtToken;\r\n  },\r\n  getJWTConfig: () => {\r\n    const jwtToken = localStorage.getItem(\"ARROW_JWT_TOKEN\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + jwtToken,\r\n      },\r\n    };\r\n    return config;\r\n  },\r\n};\r\n"],"sourceRoot":""}