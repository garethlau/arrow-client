{"version":3,"sources":["components/Login/Login.jsx","hooks/useFormInput.js","components/Login/LoginContainer.jsx","components/Nav/Nav.jsx","components/Nav/NavContainer.jsx","components/Dashboard/Dashboard.jsx","toaster.js","components/Dashboard/DashboardContainer.jsx","components/Create/Create.jsx","components/Create/CreateContainer.jsx","App.js","serviceWorker.js","index.js","constants.js"],"names":["Login","username","password","submit","helperText","label","labelFor","labelInfo","id","placeholder","value","onChange","onClick","text","intent","useFormInput","initialValue","useState","setValue","hasError","setHasError","setHelperText","clearError","e","target","clear","setError","msg","LoginContainer","history","useHistory","a","data","axios","post","base","result","console","log","push","message","Nav","goto","align","Alignment","LEFT","className","Classes","MINIMAL","icon","RIGHT","NavContainer","location","Dashboard","endpoints","selected","select","deleteAlert","cancelDelete","confirmDelete","view","edit","remove","endpointOverlay","handleViewClose","canOutsideClickCancel","canEscapeKeyCancel","cancelButtonText","confirmButtonText","Intent","DANGER","isOpen","onCancel","onConfirm","method","uri","style","padding","bordered","interactive","width","map","endpoint","key","_id","textAlign","checked","includes","whitelist","toString","marginRight","small","rightIcon","outlined","onClose","OVERLAY_SCROLL_CONTAINER","canEscapeKeyClose","canOutsideClickClose","hasBackdrop","usePortal","useTallContent","top","left","transform","CARD","marginLeft","overflow","height","dangerouslySetInnerHTML","__html","displayCode","highlight","languages","js","length","domain","DIALOG_FOOTER_ACTIONS","margin","AppToaster","Toaster","create","position","Position","TOP","DashboardContainer","setEndpoints","setSelected","setDeleteAlert","setEndpointOverlay","useEffect","get","then","res","catch","err","tmp","filter","elem","delete","show","action","window","reload","SUCCESS","Create","handleMethodChange","code","onCodeChange","testCode","createEndpoint","authorizedDomains","addDomain","removeDomain","testResults","showTestResults","marginBottom","options","border","onValueChange","fontFamily","fontSize","hostname","minimal","time","CreateContainer","setCode","setMethod","setAuthorizedDomains","setTestResults","setShowTestResults","event","currentTarget","newCode","substring","content","body","query","d","Date","toLocaleTimeString","Home","App","exact","path","component","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.e7760be2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FormGroup, InputGroup, Button } from \"@blueprintjs/core\";\r\n\r\nexport default function Login({ username, password, submit }) {\r\n  return (\r\n    <div>\r\n      <FormGroup\r\n        helperText={username.helperText}\r\n        label=\"Label A\"\r\n        labelFor=\"text-input\"\r\n        labelInfo=\"(required)\"\r\n      >\r\n        <InputGroup\r\n          id=\"username-text-input\"\r\n          placeholder=\"Username\"\r\n          value={username.value}\r\n          onChange={username.onChange}\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup\r\n        helperText={password.helperText}\r\n        label=\"Label A\"\r\n        labelFor=\"text-input\"\r\n        labelInfo=\"(required)\"\r\n      >\r\n        <InputGroup\r\n          id=\"password-text-input\"\r\n          placeholder=\"Username\"\r\n          value={password.value}\r\n          onChange={password.onChange}\r\n        />\r\n      </FormGroup>\r\n      <Button onClick={submit} text=\"Login\" intent=\"primary\" />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nconst useFormInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [helperText, setHelperText] = useState(\"\");\r\n\r\n  function setError(msg) {\r\n    setHasError(true);\r\n    setHelperText(msg);\r\n  }\r\n\r\n  function clearError() {\r\n    setHasError(false);\r\n    setHelperText(\"\");\r\n  }\r\n\r\n  function handleChange(e) {\r\n    clearError();\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  function clear() {\r\n    setValue(\"\");\r\n  }\r\n  return {\r\n    value: value,\r\n    onChange: handleChange,\r\n    clear: clear,\r\n    hasError: hasError,\r\n    helperText: helperText,\r\n    setError: setError,\r\n    clearError: clearError,\r\n  };\r\n};\r\n\r\nexport default useFormInput;\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { base } from \"../../constants\";\r\n\r\nexport default function LoginContainer() {\r\n  const history = useHistory();\r\n  const username = useFormInput(\"\");\r\n  const password = useFormInput(\"\");\r\n\r\n  async function submit() {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    try {\r\n      let result = await axios.post(base + \"/core/auth/login\", data);\r\n      console.log(result);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  return <Login username={username} password={password} submit={submit} />;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarDivider,\r\n  NavbarGroup,\r\n  NavbarHeading,\r\n  Button,\r\n  Alignment,\r\n  Classes,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default function Nav({ goto }) {\r\n  return (\r\n    <Navbar>\r\n      <NavbarGroup align={Alignment.LEFT}>\r\n        <NavbarHeading>Arrow</NavbarHeading>\r\n        <NavbarDivider />\r\n        <Button\r\n          onClick={goto(\"/\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"home\"\r\n          text=\"Home\"\r\n        />\r\n        <Button\r\n          onClick={goto(\"/dashboard\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"control\"\r\n          text=\"Dashboard\"\r\n        />\r\n        <Button\r\n          onClick={goto(\"/create\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"add\"\r\n          text=\"Create\"\r\n        />\r\n      </NavbarGroup>\r\n\r\n      <NavbarGroup align={Alignment.RIGHT}>\r\n        <Button\r\n          onClick={goto(\"/login\")}\r\n          className={Classes.MINIMAL}\r\n          icon=\"log-in\"\r\n          text=\"Login\"\r\n        />\r\n      </NavbarGroup>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nexport default function NavContainer() {\r\n  const history = useHistory();\r\n\r\n  const goto = (location) => () => {\r\n    history.push(location);\r\n  };\r\n\r\n  return <Nav goto={goto} />;\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"../Nav\";\r\n\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"../../styles/prism.css\";\r\nimport {\r\n  HTMLTable,\r\n  Button,\r\n  Checkbox,\r\n  Alert,\r\n  Intent,\r\n  Overlay,\r\n  Classes,\r\n  H3,\r\n  Code,\r\n} from \"@blueprintjs/core\";\r\n\r\nexport default function Dashboard({\r\n  endpoints,\r\n  selected,\r\n  select,\r\n  deleteAlert,\r\n  cancelDelete,\r\n  confirmDelete,\r\n  view,\r\n  edit,\r\n  remove,\r\n  endpointOverlay,\r\n  handleViewClose,\r\n}) {\r\n  function createCode() {\r\n    return {\r\n      __html: endpointOverlay.displayCode\r\n        ? highlight(endpointOverlay.displayCode, languages.js)\r\n        : null,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <section>\r\n        <Alert\r\n          canOutsideClickCancel\r\n          canEscapeKeyCancel\r\n          cancelButtonText=\"Cancel\"\r\n          confirmButtonText=\"Delete\"\r\n          icon=\"trash\"\r\n          intent={Intent.DANGER}\r\n          isOpen={deleteAlert.isOpen}\r\n          onCancel={cancelDelete}\r\n          onConfirm={confirmDelete}\r\n        >\r\n          <p>\r\n            Are you sure you want to delete{\" \"}\r\n            <b>\r\n              {deleteAlert.method} {deleteAlert.uri}\r\n            </b>\r\n            ? This operation is irreversiable.\r\n          </p>\r\n        </Alert>\r\n      </section>\r\n      <div style={{ padding: \"25px\" }}>\r\n        <HTMLTable bordered interactive style={{ width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"75px\" }}>{null}</th>\r\n              <th style={{ width: \"100px\" }}>METHOD</th>\r\n              <th>URL</th>\r\n              <th>Whitelist</th>\r\n              <th style={{ width: \"300px\" }}>{null}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {endpoints && endpoints.map((endpoint) => (\r\n              <tr key={endpoint._id}>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <Checkbox\r\n                    checked={selected.includes(endpoint._id)}\r\n                    onChange={select(endpoint._id)}\r\n                  />\r\n                </td>\r\n                <td>{endpoint.method}</td>\r\n                <td>{endpoint.uri}</td>\r\n                <td>{endpoint.whitelist.toString()}</td>\r\n                <td>\r\n                  <Button\r\n                    onClick={view(endpoint._id)}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    small\r\n                    rightIcon=\"eye-open\"\r\n                    text=\"View\"\r\n                    intent=\"primary\"\r\n                    outlined\r\n                  />\r\n                  <Button\r\n                    onClick={edit(endpoint._id)}\r\n                    style={{ marginRight: \"10px\" }}\r\n                    small\r\n                    rightIcon=\"edit\"\r\n                    text=\"Edit\"\r\n                    intent=\"warning\"\r\n                    outlined\r\n                  />\r\n\r\n                  <Button\r\n                    onClick={remove(endpoint._id)}\r\n                    small\r\n                    rightIcon=\"trash\"\r\n                    text=\"Delete\"\r\n                    intent=\"danger\"\r\n                    outlined\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </HTMLTable>\r\n      </div>\r\n\r\n      <section>\r\n        <Overlay\r\n          onClose={handleViewClose}\r\n          className={Classes.OVERLAY_SCROLL_CONTAINER}\r\n          isOpen={endpointOverlay.isOpen}\r\n          canEscapeKeyClose\r\n          canOutsideClickClose\r\n          hasBackdrop\r\n          usePortal\r\n          useTallContent={false}\r\n        >\r\n          <div\r\n            style={{\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              width: \"600px\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n            className={Classes.CARD}\r\n          >\r\n            <H3>\r\n              [{endpointOverlay.method}] {endpointOverlay.uri}\r\n            </H3>\r\n            <div\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                overflow: \"scroll\",\r\n                width: \"500px\",\r\n                height: \"300px\",\r\n              }}\r\n              dangerouslySetInnerHTML={createCode()}\r\n            />\r\n            <div>\r\n              {endpointOverlay.whitelist && endpointOverlay.whitelist.length > 0 &&\r\n                endpointOverlay.whitelist.map((domain) => <div>{domain}</div>)}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.DANGER}\r\n                onClick={handleViewClose}\r\n                style={{ margin: \"\" }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Overlay>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\n/** Singleton toaster instance. Create separate instances for different options. */\r\nexport const AppToaster = Toaster.create({\r\n  className: \"recipe-toaster\",\r\n  position: Position.TOP,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport { AppToaster } from \"../../toaster\";\r\nimport { base } from \"../../constants\";\r\n\r\nexport default function DashboardContainer() {\r\n  const [endpoints, setEndpoints] = useState([]);\r\n  const [selected, setSelected] = useState([\"\"]);\r\n  const [deleteAlert, setDeleteAlert] = useState({\r\n    isOpen: false,\r\n    uri: \"\",\r\n    method: \"\",\r\n  });\r\n\r\n  const [endpointOverlay, setEndpointOverlay] = useState({\r\n    isOpen: false,\r\n  });\r\n\r\n  const select = (id) => () => {\r\n    if (selected.includes(id)) {\r\n      // Need to remove\r\n      let tmp = selected.filter((elem) => elem !== id);\r\n      setSelected(tmp);\r\n    } else {\r\n      // Add to selected array\r\n      setSelected([...selected, id]);\r\n    }\r\n  };\r\n\r\n  function handleViewClose() {\r\n    setEndpointOverlay({ isOpen: false });\r\n  }\r\n\r\n  const view = (id) => () => {\r\n    let endpoint = endpoints.filter((elem) => elem._id === id)[0];\r\n\r\n    console.log(endpoint);\r\n    setEndpointOverlay({\r\n      isOpen: true,\r\n      uri: endpoint.uri,\r\n      method: endpoint.method,\r\n      whitelist: endpoint.whitelist,\r\n      displayCode: endpoint.displayCode,\r\n    });\r\n  };\r\n\r\n  const edit = (id) => () => {};\r\n\r\n  const remove = (id) => () => {\r\n    let endpoint = endpoints.filter((elem) => elem._id === id)[0];\r\n    console.log(endpoint);\r\n    setDeleteAlert({\r\n      isOpen: true,\r\n      uri: endpoint.uri,\r\n      method: endpoint.method,\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  function confirmDelete() {\r\n    axios\r\n      .delete(`${base}/core/endpoint?toDelete=[\"${deleteAlert.id}\"]`)\r\n      .then((res) => {\r\n        setDeleteAlert({ isOpen: false });\r\n\r\n        AppToaster.show({\r\n          message: \"Endpoint successfully deleted.\",\r\n          action: {\r\n            onClick: () => window.location.reload(false),\r\n            text: \"Refresh\",\r\n          },\r\n          intent: Intent.SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function cancelDelete() {\r\n    setDeleteAlert({\r\n      isOpen: false,\r\n      uri: \"\",\r\n      method: \"\",\r\n      id: \"\",\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/core/endpoint\")\r\n      .then((res) => {\r\n        console.log(res.data.endpoints);\r\n        setEndpoints(res.data.endpoints);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Dashboard\r\n      endpoints={endpoints}\r\n      selected={selected}\r\n      select={select}\r\n      deleteAlert={deleteAlert}\r\n      confirmDelete={confirmDelete}\r\n      cancelDelete={cancelDelete}\r\n      view={view}\r\n      edit={edit}\r\n      remove={remove}\r\n      endpointOverlay={endpointOverlay}\r\n      handleViewClose={handleViewClose}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"../../styles/prism.css\";\r\n\r\nimport Nav from \"../Nav\";\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  HTMLSelect,\r\n  TextArea,\r\n  Intent,\r\n  Button,\r\n  ControlGroup,\r\n  H3,\r\n  Collapse,\r\n  Code,\r\n} from \"@blueprintjs/core\";\r\nexport default function Create({\r\n  uri,\r\n  handleMethodChange,\r\n  method,\r\n  code,\r\n  onCodeChange,\r\n  testCode,\r\n  createEndpoint,\r\n  whitelist,\r\n  authorizedDomains,\r\n  addDomain,\r\n  removeDomain,\r\n  testResults,\r\n  showTestResults,\r\n}) {\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div style={{ padding: \"30px\" }}>\r\n        <H3>Create Your New API Endpoint</H3>\r\n        <ControlGroup style={{ width: \"450px\", marginBottom: \"15px\" }}>\r\n          <HTMLSelect\r\n            id=\"method-selector\"\r\n            value={method}\r\n            options={[\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"]}\r\n            onChange={handleMethodChange}\r\n          />\r\n          <InputGroup\r\n            id=\"endpoint-uri-text-input\"\r\n            placeholder=\"/animals/dogs\"\r\n            value={uri.value}\r\n            onChange={uri.onChange}\r\n          />\r\n        </ControlGroup>\r\n        <div\r\n          style={{\r\n            width: \"550px\",\r\n            marginBottom: \"15px\",\r\n            border: \"1px solid lightgrey\",\r\n          }}\r\n        >\r\n          <Editor\r\n            value={code}\r\n            onValueChange={onCodeChange}\r\n            highlight={(code) => highlight(code, languages.js)}\r\n            padding={10}\r\n            style={{\r\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n              fontSize: 12,\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"300px\" }}>\r\n          <H3>Authorized Domain Origins</H3>\r\n          <p>Only requests made from these domains can access your API.</p>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            {authorizedDomains.length > 0 &&\r\n              authorizedDomains.map((hostname) => (\r\n                <div>\r\n                  <Button\r\n                    icon=\"remove\"\r\n                    minimal\r\n                    onClick={removeDomain(hostname)}\r\n                    intent=\"danger\"\r\n                    small\r\n                  />\r\n                  {hostname}\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div style={{ marginBottom: \"15px\" }}>\r\n            <ControlGroup>\r\n              <InputGroup\r\n                placeholder=\"realurl.com\"\r\n                onChange={whitelist.onChange}\r\n                value={whitelist.value}\r\n              />\r\n              <Button\r\n                onClick={addDomain}\r\n                rightIcon=\"add\"\r\n                intent=\"primary\"\r\n                text=\"Add Domain\"\r\n              />\r\n            </ControlGroup>\r\n          </div>\r\n        </div>\r\n        <div style={{ marginBottom: \"15px\" }}>\r\n          <Button\r\n            onClick={testCode}\r\n            icon=\"lab-test\"\r\n            intent=\"warning\"\r\n            text=\"Check Validity\"\r\n          />\r\n        </div>\r\n        <p>Results:</p>\r\n        <div\r\n          style={{\r\n            width: \"550px\",\r\n            marginBottom: \"15px\",\r\n            border: \"1px solid lightgrey\",\r\n          }}\r\n        >\r\n          <Collapse isOpen={showTestResults}>\r\n            <pre>\r\n              {testResults.map((result) => (\r\n                <div>\r\n                  <code>\r\n                    [{result.time}] {result.message}\r\n                  </code>\r\n                </div>\r\n              ))}\r\n            </pre>\r\n          </Collapse>\r\n        </div>\r\n        <Button\r\n          onClick={createEndpoint}\r\n          icon=\"globe-network\"\r\n          intent=\"primary\"\r\n          text=\"Create Endpoint\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Create from \"./Create\";\r\nimport useFormInput from \"../../hooks/useFormInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppToaster } from \"../../toaster\";\r\n\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport { base } from \"../../constants\";\r\n\r\nexport default function CreateContainer() {\r\n  const history = useHistory();\r\n  const uri = useFormInput(\"\");\r\n  const [code, setCode] = useState(`module.exports = (req, res) => {\r\n    /* Your code here */\r\n\r\n    /* Make sure to return a response object */\r\n    return res.status(200).send();\r\n}\r\n`);\r\n  const [method, setMethod] = useState(\"GET\");\r\n  const whitelist = useFormInput(\"\");\r\n  const [authorizedDomains, setAuthorizedDomains] = useState([]);\r\n\r\n  const [testResults, setTestResults] = useState([]);\r\n  const [showTestResults, setShowTestResults] = useState(true);\r\n\r\n  function handleMethodChange(event) {\r\n    setMethod(event.currentTarget.value);\r\n  }\r\n\r\n  function onCodeChange(newCode) {\r\n    setCode(newCode);\r\n  }\r\n\r\n  // content: code.replace(/\\n/g, \"\"),\r\n  function testCode() {\r\n    const data = {\r\n      uri: uri.value.substring(1),\r\n      method: method,\r\n      content: code,\r\n      whitelist: authorizedDomains,\r\n      body: {},\r\n      query: {},\r\n    };\r\n    console.log(data);\r\n    axios\r\n      .post(base + \"/core/endpoint/validate\", data)\r\n      .then((res) => {\r\n        let d = new Date();\r\n        setTestResults([\r\n          ...testResults,\r\n          { message: res.data.message, time: d.toLocaleTimeString() },\r\n        ]);\r\n        setShowTestResults(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function createEndpoint() {\r\n    const data = {\r\n      uri: uri.value.substring(1),\r\n      method: method,\r\n      content: code,\r\n      whitelist: authorizedDomains,\r\n      body: {},\r\n      query: {},\r\n    };\r\n    console.log(data);\r\n    axios\r\n      .post(base + \"/core/endpoint\", data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        AppToaster.show({\r\n          message: \"Endpoint created. \",\r\n          action: {\r\n            onClick: () => history.push(\"/dashboard\"),\r\n            text: \"Go to Dashboard\",\r\n          },\r\n          intent: Intent.SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function addDomain() {\r\n    setAuthorizedDomains([...authorizedDomains, whitelist.value]);\r\n    whitelist.clear();\r\n  }\r\n\r\n  const removeDomain = (hostname) => () => {\r\n    setAuthorizedDomains(\r\n      authorizedDomains.filter((domain) => domain !== hostname)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Create\r\n      uri={uri}\r\n      handleMethodChange={handleMethodChange}\r\n      method={method}\r\n      code={code}\r\n      onCodeChange={onCodeChange}\r\n      testCode={testCode}\r\n      createEndpoint={createEndpoint}\r\n      whitelist={whitelist}\r\n      authorizedDomains={authorizedDomains}\r\n      addDomain={addDomain}\r\n      removeDomain={removeDomain}\r\n      testResults={testResults}\r\n      showTestResults={showTestResults}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport { Button } from \"@blueprintjs/core\";\n\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport Create from \"./components/Create\";\n\nfunction Home() {\n  return (\n    <div>\n      <h1>Welcome to Arrow</h1>\n      <Button intent=\"primary\" text=\"Nice\" />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/create\" component={Create} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n  base:\r\n    process.env.NODE_ENV === \"production\" ? \"https://arrow.garethdev.space\" : \"\",\r\n};\r\n"],"sourceRoot":""}